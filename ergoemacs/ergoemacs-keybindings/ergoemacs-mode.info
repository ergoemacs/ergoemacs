This is ergoemacs-mode.info, produced by makeinfo version 4.13 from
ergoemacs-mode.texi.

INFO-DIR-SECTION Emacs lisp libraries
START-INFO-DIR-ENTRY
* ergoemacs-mode: (ergoemacs-mode).     ergoemacs-mode
END-INFO-DIR-ENTRY


File: ergoemacs-mode.info,  Node: Top,  Next: Ergoemacs Keybindings,  Up: (dir)

Top
***

* Menu:

* Ergoemacs Keybindings::


File: ergoemacs-mode.info,  Node: Ergoemacs Keybindings,  Prev: Top,  Up: Top

1 Ergoemacs Keybindings
***********************

Xah Lee, David Capello, and Matthew Fidler ## Tips for adopting
ErgoEmacs Keybindings If you are a long time emacs user, you may find
it painful to adopt this setup.

This difficulty is nothing special. It's the same difficulty when you
switching to dvorak after years of qwerty. Basically, it's about
changing muscle memory.

* Menu:

* Where Did My Command Go?::
* Shortcut To Open Cheatsheet::
* Gradual Adoption for an Emacs User::
* Changing key layouts or adding variants::
* Ergoemacs Keys System wide::


File: ergoemacs-mode.info,  Node: Where Did My Command Go?,  Next: Shortcut To Open Cheatsheet,  Up: Ergoemacs Keybindings

1.1 Where Did My Command Go?
============================

The ergonomic-mode minor mode features the command
where-is-old-binding, with shortcut “Ctrl+h o”. This command asks
you to type a shortcut, and tells you which command it was bound in GNU
Emacs, and the new shortcut for it under ErgoEmacs?.


File: ergoemacs-mode.info,  Node: Shortcut To Open Cheatsheet,  Next: Gradual Adoption for an Emacs User,  Prev: Where Did My Command Go?,  Up: Ergoemacs Keybindings

1.2 Shortcut To Open Cheatsheet
===============================

You can define a key such as F8 to open the image file showing the
layout.


File: ergoemacs-mode.info,  Node: Gradual Adoption for an Emacs User,  Next: Changing key layouts or adding variants,  Prev: Shortcut To Open Cheatsheet,  Up: Ergoemacs Keybindings

1.3 Gradual Adoption for an Emacs User
======================================

Here's some tips that may help you adopt. ### Level 1 If you find it
too painful to switch, don't use the whole package. Instead, start off
with just the arrow key movements.

(setq ergoemacs-variant "lvl1") (ergoemacs-mode 1)

Either put the above in your emacs init file (usually at
“~/.emacs”), or customize ergoemacs-mode to set the variant to lvl1.

With only the above change, you will increase your emacs productivity,
especially if you are a touch typist. These single char cursor moving
commands are the top 4 most frequently used emacs commands by
statistics, roughly accounting for 43% of commands that have a shortcut.

Once you used the above for a couple of weeks, you may add more keys to
adopt.

* Menu:

* Level 2::
* Level 3::
* Guru::
* Master::


File: ergoemacs-mode.info,  Node: Level 2,  Next: Level 3,  Up: Gradual Adoption for an Emacs User

1.3.1 Level 2
-------------

Adding keys for moving around words and deleting words.

(setq ergoemacs-variant "lvl2") (ergoemacs-mode 1)


File: ergoemacs-mode.info,  Node: Level 3,  Next: Guru,  Prev: Level 2,  Up: Gradual Adoption for an Emacs User

1.3.2 Level 3
-------------

Try to use the full ergoemacs mode.

(setq ergoemacs-variant nil) (ergoemacs-mode 1)


File: ergoemacs-mode.info,  Node: Guru,  Next: Master,  Prev: Level 3,  Up: Gradual Adoption for an Emacs User

1.3.3 Guru
----------

The guru variant takes away the arrow keys and page up/page down keys.

(setq ergoemacs-variant "guru") (ergoemacs-mode 1)


File: ergoemacs-mode.info,  Node: Master,  Prev: Guru,  Up: Gradual Adoption for an Emacs User

1.3.4 Master
------------

The Master variant takes away the backspace. This key is not
particularly ergonomic, and can cause possible pinky issues. Changing
this means that you may wish to try to get ergoemacs bindings
everywhere.

(setq ergoemacs-variant "master") (ergoemacs-mode 1)


File: ergoemacs-mode.info,  Node: Changing key layouts or adding variants,  Next: Ergoemacs Keys System wide,  Prev: Gradual Adoption for an Emacs User,  Up: Ergoemacs Keybindings

1.4 Changing key layouts or adding variants
===========================================

* Menu:

* Globally defined keys::


File: ergoemacs-mode.info,  Node: Globally defined keys,  Up: Changing key layouts or adding variants

1.4.1 Globally defined keys
---------------------------

These keys are defined on the global keymap and should be retained
regardless of the variant or layout used. However, these keys will not
show up on keyboard documentation generated by ergoemacs. Additionally,
these keys may be masked or remapped by other programs. ### Ergoemacs
defined keys These keys are defined in the ergoemacs-keymap. When the
layout changes by changing options, these keys are lost. However, you
may create your own variant to allow these keys to be saved. ####
Adding a ergonomic key Ergonomic keys can be added by:

(ergoemacs-key "M-a" 'execute-extended-command "Execute")

This adds the Alt-a command to all keyboards based on the QWERTY
layout. This only applies to the currently selected keyboard variant.

Note the last parameter is optional and allows Ergoemacs to document
that this is an "Execute" command when generating keyboard layout
diagrams. #### Adding a fixed key Fixed keys can be added by:

(ergoemacs-fixed-key "C-o" 'ido-find-file "Open File")

This adds the fixed key to the currently selected emacs variant

Note the last parameter is optional and allows Ergoemacs to document
that this is an "Open" command when generating keyboard layout diagrams.

* Menu:

* Adding an ergonomic key map with fixed mappings::
* Creating a keyboard variant::


File: ergoemacs-mode.info,  Node: Adding an ergonomic key map with fixed mappings,  Next: Creating a keyboard variant,  Up: Globally defined keys

1.4.1.1 Adding an ergonomic key map with fixed mappings
.......................................................

When you want to add an ergonomic keymap with fixed mappings such as
the ergoprog variant you can add them as follows:

(ergoemacs-key "M-m s" 'save-buffer "" t)

This converts the QWERTY M-m keybinding and the fixed keybinding s to
save buffer


File: ergoemacs-mode.info,  Node: Creating a keyboard variant,  Prev: Adding an ergonomic key map with fixed mappings,  Up: Globally defined keys

1.4.1.2 Creating a keyboard variant
...................................


File: ergoemacs-mode.info,  Node: Ergoemacs Keys System wide,  Prev: Changing key layouts or adding variants,  Up: Ergoemacs Keybindings

1.5 Ergoemacs Keys System wide
==============================

* Menu:

* Bash::
* Windows::
* Extras::
* Updating Ergoemacs for the latest version of emacs::


File: ergoemacs-mode.info,  Node: Bash,  Next: Windows,  Up: Ergoemacs Keys System wide

1.5.1 Bash
----------


File: ergoemacs-mode.info,  Node: Windows,  Next: Extras,  Prev: Bash,  Up: Ergoemacs Keys System wide

1.5.2 Windows
-------------

In windows some of the ergoemacs keys are implemented system wide by
assuming apps follow the CUA-style keys like CTRL-f for find, CTRL-h
for replace. ### Mac OS X ## Developer information ### Layouts All the
layouts in ergoemacs are easy to generate. To add your own personal
layout you just need to match the keybindings for your in a layout
variable from `ergoemacs-layout-XXX'. For the US and UK layouts, the
defining variable adds the layout:

(defvar ergoemacs-layout-us '("" "`" "1" "2" "3" "4" "5" "6" "7" "8"
"9" "0" "-" "=" "" "" "" "q" "w" "e" "r" "t" "y" "u" "i" "o" "p" "["
"]" "\" "" "" "a" "s" "d" "f" "g" "h" "j" "k" "l" ";" "'" "" "" "" ""
"z" "x" "c" "v" "b" "n" "m" "," "." "/" "" "" "" ;; Shifted "" "~" "!"
"@" "#" "$" "%" "^" "&" "*" "(" ")" "_" "+" "" "" "" "Q" "W" "E" "R"
"T" "Y" "U" "I" "O" "P" "{" "}" "|" "" "" "A" "S" "D" "F" "G" "H" "J"
"K" "L" ":" """ "" "" "" "" "Z" "X" "C" "V" "B" "N" "M" "<" ">" "?" ""
"" "") "US Engilsh QWERTY Keyboard")

(defvar ergoemacs-layout-gb '("" "`" "1" "2" "3" "4" "5" "6" "7" "8"
"9" "0" "-" "=" "" "" "" "q" "w" "e" "r" "t" "y" "u" "i" "o" "p" "["
"]" "" "" "" "a" "s" "d" "f" "g" "h" "j" "k" "l" ";" "'" "#" "" "" "\"
"z" "x" "c" "v" "b" "n" "m" "," "." "/" "" "" "" ;; Shifted "" "¬" "!"
"@" "#" "$" "%" "^" "&" "*" "(" ")" "_" "+" "" "" "" "Q" "W" "E" "R"
"T" "Y" "U" "I" "O" "P" "{" "}" "" "" "" "A" "S" "D" "F" "G" "H" "J"
"K" "L" ":" "@" "~" "" "" "|" "Z" "X" "C" "V" "B" "N" "M" "<" ">" "?"
"" "" "") "UK QWERTY")

This lists the keyboard positions from left to right for the unshifted
and shifted states of he keyboard. After listing the keyboard
descriptions it provides a description of the layout which is used for
the customization variable `ergoemacs-keyboard-layout'. By simply
defining your layout before ergoemacs-mode is loaded, you add it to the
ergoemacs-keyboard-layout variable with its description. ###
Customizing/Saving the variables You can customize the ergoemacs
keybindings by typing M-x customize-group ergoemacs-mode


File: ergoemacs-mode.info,  Node: Extras,  Next: Updating Ergoemacs for the latest version of emacs,  Prev: Windows,  Up: Ergoemacs Keys System wide

1.5.3 Extras
------------

To generate keyboard binding diagrams and scripts that allow you to use
ergoemacs elsewhere, please type M-x ergoemacs-extra. These scripts
will be stored under the extras directory.

Note that if you use an alternative layout on a QWERTY keyboard (such
as colemak), and use the portable colemak layout, to use ergoemacs keys
use the us layout not the colemak layout. However, if you installed the
colemak keyboard layout to your system, use the colemak not the US
layout variant.


File: ergoemacs-mode.info,  Node: Updating Ergoemacs for the latest version of emacs,  Prev: Extras,  Up: Ergoemacs Keys System wide

1.5.4 Updating Ergoemacs for the latest version of emacs
--------------------------------------------------------

To tell if a key was a globally defined emacs key, ergoemacs needs to
know what key was defined by emacs. This typically changes a little for
each emacs version. This is due to renamed functions, or re-purposed
keys. To update for the current version of emacs, you can type

(ergoemacs-warn-globally-changed-keys t)

This is also done in the test suite. This can be accessed by
`ergoemacs-test' command.



Tag Table:
Node: Top224
Node: Ergoemacs Keybindings352
Node: Where Did My Command Go?994
Node: Shortcut To Open Cheatsheet1426
Node: Gradual Adoption for an Emacs User1736
Node: Level 22769
Node: Level 33009
Node: Guru3239
Node: Master3500
Node: Changing key layouts or adding variants3885
Node: Globally defined keys4193
Node: Adding an ergonomic key map with fixed mappings5648
Node: Creating a keyboard variant6156
Node: Ergoemacs Keys System wide6378
Node: Bash6678
Node: Windows6792
Node: Extras8942
Node: Updating Ergoemacs for the latest version of emacs9603

End Tag Table


Local Variables:
coding: utf-8
End:
